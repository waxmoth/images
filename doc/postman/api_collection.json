{
  "info": {
    "_postman_id": "919e039e-ffcc-4d4c-b351-cdbc4091ce5a",
    "name": "Image servers",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "2952825"
  },
  "item": [
    {
      "name": "Fetch image",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "CryptoJS = require('crypto-js');",
              "btoa = require('btoa');",
              "const jwtHeader = btoa(JSON.stringify(",
              "    {",
              "        alg: 'HS256',",
              "        typ: 'JWT'",
              "    }",
              ")).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');",
              "",
              "const jwtBody = btoa(JSON.stringify(",
              "    {",
              "        app: 'image-functions',",
              "        data: {",
              "            host: 'www.yiige.com'",
              "        },",
              "        exp: Math.floor(Date.now() / 1000) + 7200",
              "    }",
              ")).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');",
              "",
              "const hmac = CryptoJS.HmacSHA256(jwtHeader + '.' + jwtBody, pm.environment.get('AUTH_KEY'));",
              "const hmacBase64 = CryptoJS.enc.Base64.stringify(hmac).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');",
              "",
              "pm.request.headers.add({",
              "    key: 'Authorization',",
              "    value: 'Bearer ' + jwtHeader + '.' + jwtBody + '.' + hmacBase64",
              "});",
              "",
              "pm.request.headers.add({",
              "    key: 'Auth-User',",
              "    value: pm.environment.get('AUTH_USER')",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "})",
              "",
              "pm.test('Response has correct headers', function(){",
              "    pm.response.to.have.header('Content-Type');",
              "    pm.expect(pm.response.headers.get('Content-Type')).to.contains('image');",
              "    pm.response.to.have.header('File-Name');",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": {
          "host": [
            "{{host}}"
          ],
          "path": [
            "api/image"
          ],
          "query": [
            {
              "key": "width",
              "value": "400"
            },
            {
              "key": "height",
              "value": "200"
            },
            {
              "key": "type",
              "value": "resize"
            },
            {
              "key": "File-Name",
              "value": "fetched_logo.png"
            },
            {
              "key": "url",
              "value": "https://www.yiige.com/img/logo.png"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Fetch image from storage",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "CryptoJS = require('crypto-js');",
              "btoa = require('btoa');",
              "const jwtHeader = btoa(JSON.stringify(",
              "    {",
              "        alg: 'HS256',",
              "        typ: 'JWT'",
              "    }",
              ")).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');",
              "",
              "const jwtBody = btoa(JSON.stringify(",
              "    {",
              "        app: 'image-functions',",
              "        data: {",
              "            host: 'www.yiige.com'",
              "        },",
              "        exp: Math.floor(Date.now() / 1000) + 7200",
              "    }",
              ")).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');",
              "",
              "const hmac = CryptoJS.HmacSHA256(jwtHeader + '.' + jwtBody, pm.environment.get('AUTH_KEY'));",
              "const hmacBase64 = CryptoJS.enc.Base64.stringify(hmac).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/g, '');",
              "",
              "pm.request.headers.add({",
              "    key: 'Authorization',",
              "    value: 'Bearer ' + jwtHeader + '.' + jwtBody + '.' + hmacBase64",
              "});",
              "",
              "pm.request.headers.add({",
              "    key: 'Auth-User',",
              "    value: pm.environment.get('AUTH_USER')",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Response time less 10 ms, if get data from cache', function() {",
              "    pm.expect(responseTime).to.be.below(10);",
              "})",
              "",
              "pm.test('Status code is 200', function() {",
              "    pm.response.to.have.status(200);",
              "})",
              "",
              "pm.test('Response has correct headers', function(){",
              "    pm.response.to.have.header('Content-Type');",
              "    pm.expect(pm.response.headers.get('Content-Type')).to.contains('image');",
              "    pm.response.to.have.header('File-Name');",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": {
          "host": [
            "{{host}}"
          ],
          "path": [
            "api/image"
          ],
          "query": [
            {
              "key": "File-Name",
              "value": "fetched_logo.png"
            }
          ]
        }
      },
      "response": []
    }
  ]
}
